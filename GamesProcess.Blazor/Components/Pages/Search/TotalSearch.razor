@using GamesProcess.Models
@using GamesProcess.Models.ViewModels
@using GamesProcess.Blazor.Components.Shared.SearchComponents
@inherits OwningComponentBase<GamesProcess.Data.Services.ApplicationDbService>
@page "/Search/Total"
@page "/Search/TotalSearch"

<PageTitle Title="Total Search" />
<BodyTopBar PageTitle="Total Search" RouteLink="/Search" RouteTitle="Search" />

@if (!_resultLoading)
{
    <Row>
        <BodyTile>
            <div class="col-sm-10">
                <input type="checkbox" style="align-self: center; vertical-align: middle;" @bind="_hideSearchParameterTiles">
                <label>@(_hideSearchParameterTiles ? "Show" : "Hide") Search Parameters</label>
            </div>
        </BodyTile>
    </Row>
}
@if (!_hideSearchParameterTiles)
{
    <Row>
        <BodyTile>
            <TotalSearchParametersComponent @ref="searchParametersComponent" Model="@_SearchResultViewModel.SearchParameters" OnValidSubmitCallBack="@ShowResultsAsync" />
        </BodyTile>
    </Row>
}

@if (_SearchResultViewModel.SearchResults != null)
{
    <Row>
        <BodyTile AdditionalCss="table-responsive">
            @if (_resultLoading)
            {
                <h4 class="m-t-0 header-title text-info"><b>Search Results Loading...</b></h4>
            }
            else
            {
                <h4 class="m-t-0 header-title"><b>Search Results</b></h4>
                <p class="text-muted font-13 m-b-30">
                    These are the search results from the data you inputed.
                </p>

                <TotalSearchResultComponent TotalSearchResults="_SearchResultViewModel.SearchResults" SearchParameters="_SearchResultViewModel.SearchParameters" />
            }
        </BodyTile>
    </Row>
}

@code {
    private TotalSearchResultViewModel _SearchResultViewModel { get; set; } = new TotalSearchResultViewModel() { SearchResults = null };

    private TotalSearchParametersComponent searchParametersComponent;

    private bool _hideSearchParameterTiles = false;
    private bool _resultLoading = true;

    private async Task ShowResultsAsync()
    {
        _SearchResultViewModel.SearchResults = new List<TotalSearchResult>();
        _resultLoading = true;
        _hideSearchParameterTiles = true;
        this.StateHasChanged();

        _SearchResultViewModel.SearchParameters = searchParametersComponent.Model;
        _SearchResultViewModel.SearchResults = await Service.GetTotalSearchResultsAsync(_SearchResultViewModel.SearchParameters);
        _resultLoading = false;
        this.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        _SearchResultViewModel.SearchParameters = new TotalSearchParameters();
        base.OnInitialized();
    }
}
