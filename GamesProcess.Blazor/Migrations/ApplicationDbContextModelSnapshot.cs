// <auto-generated />
using System;
using GamesProcess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamesProcess.Blazor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.2.20120.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GamesProcess.Models.AdvancedSearchParameters", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameSelection")
                        .HasColumnType("int");

                    b.Property<int>("GroupSelection")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSearchValues")
                        .HasColumnType("int");

                    b.Property<int>("NoOfWeeksToDisplay")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceLocation")
                        .HasColumnType("int");

                    b.Property<int>("ReferencePosition")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeSearched")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value2")
                        .HasColumnType("int");

                    b.Property<int>("Value2Location")
                        .HasColumnType("int");

                    b.Property<int>("Value2Position")
                        .HasColumnType("int");

                    b.Property<int>("Value2Week")
                        .HasColumnType("int");

                    b.Property<int>("Value2WeekSelect")
                        .HasColumnType("int");

                    b.Property<int>("Value3")
                        .HasColumnType("int");

                    b.Property<int>("Value3Location")
                        .HasColumnType("int");

                    b.Property<int>("Value3Position")
                        .HasColumnType("int");

                    b.Property<int>("Value3Week")
                        .HasColumnType("int");

                    b.Property<int>("Value3WeekSelect")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("AdvancedSearchParameter");
                });

            modelBuilder.Entity("GamesProcess.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventNumber")
                        .HasColumnType("int");

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("MachineValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WinningValues")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("GameID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("GamesProcess.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("GamesClassID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GamesClassID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("GamesProcess.Models.GamesClass", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GamesClass");
                });

            modelBuilder.Entity("GamesProcess.Models.TodoItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TodoItem");
                });

            modelBuilder.Entity("GamesProcess.Models.Event", b =>
                {
                    b.HasOne("GamesProcess.Models.Game", null)
                        .WithMany("Events")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamesProcess.Models.Game", b =>
                {
                    b.HasOne("GamesProcess.Models.GamesClass", null)
                        .WithMany("Games")
                        .HasForeignKey("GamesClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
